{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flore\\\\Desktop\\\\TicketsSystem\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport io from \"socket.io-client\";\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/app';\nimport { getAuth, GoogleAuthProvider, createUserWithEmailAndPassword } from \"firebase/auth\"; // Import the functions you need from the SDKs you need\n\nimport { initializeApp } from \"firebase/app\"; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAGLroThRzWxcHi5UDAHY85GXnMeAmvyto\",\n  authDomain: \"ticketsystem-d8cf0.firebaseapp.com\",\n  projectId: \"ticketsystem-d8cf0\",\n  storageBucket: \"ticketsystem-d8cf0.appspot.com\",\n  messagingSenderId: \"368046017065\",\n  appId: \"1:368046017065:web:4f2948e249fadbc44eaa38\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\ncreateUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n  // Signed in \n  const user = userCredential.user; // ...\n}).catch(error => {\n  const errorCode = error.code;\n  const errorMessage = error.message; // ..\n});\nlet ClientID;\nconst Client = io(\"http://localhost:5000\");\nClient.on(\"socket-id\", _ref => {\n  let {\n    ID\n  } = _ref;\n  ClientID = ID;\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 13\n}, this));\nexport default {\n  Client: Client,\n  CID: ClientID\n};","map":{"version":3,"names":["React","io","ReactDOM","App","getAuth","GoogleAuthProvider","createUserWithEmailAndPassword","initializeApp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","email","password","then","userCredential","user","catch","error","errorCode","code","errorMessage","message","ClientID","Client","on","ID","root","createRoot","document","getElementById","render","CID"],"sources":["C:/Users/flore/Desktop/TicketsSystem/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport io from \"socket.io-client\"\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/app';\nimport { getAuth, GoogleAuthProvider, createUserWithEmailAndPassword } from \"firebase/auth\";\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAGLroThRzWxcHi5UDAHY85GXnMeAmvyto\",\n  authDomain: \"ticketsystem-d8cf0.firebaseapp.com\",\n  projectId: \"ticketsystem-d8cf0\",\n  storageBucket: \"ticketsystem-d8cf0.appspot.com\",\n  messagingSenderId: \"368046017065\",\n  appId: \"1:368046017065:web:4f2948e249fadbc44eaa38\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app)\ncreateUserWithEmailAndPassword(auth, email, password)\n  .then((userCredential) => {\n    // Signed in \n    const user = userCredential.user;\n    // ...\n  })\n  .catch((error) => {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // ..\n  });\n\nlet ClientID;\nconst Client = io(\"http://localhost:5000\")\nClient.on(\"socket-id\", ({ID}) => {\n  ClientID = ID\n})\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(<App />)\n\nexport default {Client: Client, CID: ClientID};\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,OAAT,EAAkBC,kBAAlB,EAAsCC,8BAAtC,QAA4E,eAA5E,C,CAEA;;AACA,SAASC,aAAT,QAA8B,cAA9B,C,CACA;AACA;AAEA;;;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,oCAFS;EAGrBC,SAAS,EAAE,oBAHU;EAIrBC,aAAa,EAAE,gCAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,GAAG,GAAGR,aAAa,CAACC,cAAD,CAAzB;AACA,MAAMQ,IAAI,GAAGZ,OAAO,CAACW,GAAD,CAApB;AACAT,8BAA8B,CAACU,IAAD,EAAOC,KAAP,EAAcC,QAAd,CAA9B,CACGC,IADH,CACSC,cAAD,IAAoB;EACxB;EACA,MAAMC,IAAI,GAAGD,cAAc,CAACC,IAA5B,CAFwB,CAGxB;AACD,CALH,EAMGC,KANH,CAMUC,KAAD,IAAW;EAChB,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;EACA,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAFgB,CAGhB;AACD,CAVH;AAYA,IAAIC,QAAJ;AACA,MAAMC,MAAM,GAAG5B,EAAE,CAAC,uBAAD,CAAjB;AACA4B,MAAM,CAACC,EAAP,CAAU,WAAV,EAAuB,QAAU;EAAA,IAAT;IAACC;EAAD,CAAS;EAC/BH,QAAQ,GAAGG,EAAX;AACD,CAFD;AAGA,MAAMC,IAAI,GAAG9B,QAAQ,CAAC+B,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eAAY,QAAC,GAAD;EAAA;EAAA;EAAA;AAAA,QAAZ;AAEA,eAAe;EAACP,MAAM,EAAEA,MAAT;EAAiBQ,GAAG,EAAET;AAAtB,CAAf"},"metadata":{},"sourceType":"module"}